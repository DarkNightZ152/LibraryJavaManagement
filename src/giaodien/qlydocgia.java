/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package giaodien;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author nvcam
 */
public class qlydocgia extends javax.swing.JFrame {

    /**
     * Creates new form qlydocgia
     */
    public qlydocgia() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        statusdg = "Reset";
        Dieukhien(statusdg);
        showDuLieuDocGia();
        ButtonGroup bg = new ButtonGroup();
        bg.add(rdo_nam);
        bg.add(rdo_nu);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txt_madg = new javax.swing.JTextField();
        txt_ten = new javax.swing.JTextField();
        txt_matk = new javax.swing.JTextField();
        txt_tk = new javax.swing.JTextField();
        txt_mk = new javax.swing.JPasswordField();
        txt_sdt = new javax.swing.JTextField();
        rdo_nam = new javax.swing.JRadioButton();
        rdo_nu = new javax.swing.JRadioButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbDG = new javax.swing.JTable();
        btnSuadg = new javax.swing.JButton();
        btnThemdg = new javax.swing.JButton();
        btnXoadg = new javax.swing.JButton();
        btnResetdg = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txt_diachi = new javax.swing.JTextArea();
        date_ngaysinh = new com.toedter.calendar.JDateChooser();
        btnLuudg = new javax.swing.JButton();
        btnHuydg = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/icon_previous.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 112));
        jLabel1.setText("QUẢN LÝ ĐỘC GIẢ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(470, 470, 470)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel8.setBackground(new java.awt.Color(153, 204, 255));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setText("Mã độc giả:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel5.setText("Tên độc giả:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel6.setText("Mã tài khoản:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel7.setText("Mật khẩu:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel8.setText("Số điện thoại:");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel9.setText("Địa chỉ:");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel10.setText("Giới tính:");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel11.setText("Ngày sinh:");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel12.setText("Tài khoản:");

        txt_madg.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        txt_ten.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        txt_matk.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        txt_tk.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        txt_mk.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_mk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_mkActionPerformed(evt);
            }
        });

        txt_sdt.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        rdo_nam.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        rdo_nam.setText("Nam");

        rdo_nu.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        rdo_nu.setText("Nữ");

        tbDG.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbDG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDGMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbDG);

        btnSuadg.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnSuadg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/exchange1.png"))); // NOI18N
        btnSuadg.setText(" Sửa");
        btnSuadg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuadgActionPerformed(evt);
            }
        });

        btnThemdg.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnThemdg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/plus.png"))); // NOI18N
        btnThemdg.setText(" Thêm");
        btnThemdg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemdgActionPerformed(evt);
            }
        });

        btnXoadg.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnXoadg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/delete.png"))); // NOI18N
        btnXoadg.setText(" Xóa");
        btnXoadg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoadgActionPerformed(evt);
            }
        });

        btnResetdg.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnResetdg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/lammoi.png"))); // NOI18N
        btnResetdg.setText("Làm mới");
        btnResetdg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetdgActionPerformed(evt);
            }
        });

        txt_diachi.setColumns(20);
        txt_diachi.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_diachi.setRows(5);
        jScrollPane4.setViewportView(txt_diachi);

        date_ngaysinh.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        btnLuudg.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnLuudg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/luu.png"))); // NOI18N
        btnLuudg.setText("Lưu");
        btnLuudg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuudgActionPerformed(evt);
            }
        });

        btnHuydg.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnHuydg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/remove (1).png"))); // NOI18N
        btnHuydg.setText("Hủy");
        btnHuydg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuydgActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(btnThemdg)
                                .addGap(41, 41, 41)
                                .addComponent(btnSuadg)
                                .addGap(38, 38, 38)
                                .addComponent(btnXoadg)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnHuydg)
                                .addGap(28, 28, 28)
                                .addComponent(btnLuudg)
                                .addGap(30, 30, 30)
                                .addComponent(btnResetdg, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_ten, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(45, 45, 45)
                                .addComponent(txt_madg, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_matk, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel12))
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txt_tk, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(txt_mk, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(117, 117, 117)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(rdo_nam)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rdo_nu))
                            .addComponent(txt_sdt)
                            .addComponent(date_ngaysinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_madg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_ten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_matk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txt_tk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txt_mk, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(rdo_nam)
                            .addComponent(rdo_nu))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11)
                            .addComponent(date_ngaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_sdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(44, 44, 44))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemdg)
                    .addComponent(btnSuadg)
                    .addComponent(btnXoadg)
                    .addComponent(btnResetdg)
                    .addComponent(btnLuudg)
                    .addComponent(btnHuydg))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(3, 3, 3))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private static String statusdg ="";
    private void Dieukhien(String status){
    if(status.equals("Reset"))
    {
        txt_madg.setEnabled(false);
        txt_matk.setEnabled(false);
        txt_diachi.setEnabled(false);
        txt_ten.setEnabled(false);
        txt_mk.setEnabled(false);
        txt_tk.setEnabled(false);
        date_ngaysinh.setEnabled(false);
        txt_sdt.setEnabled(false);
       
        btnHuydg.setEnabled(false);
        btnLuudg.setEnabled(false);
        btnResetdg.setEnabled(false);
        btnSuadg.setEnabled(true);
        btnXoadg.setEnabled(true);
        btnThemdg.setEnabled(true);
    }
    else if(status.equals("Them")){
        txt_madg.setEnabled(false);
        txt_matk.setEnabled(true);
        txt_diachi.setEnabled(true);
        txt_ten.setEnabled(true);
        txt_mk.setEnabled(true);
        txt_tk.setEnabled(true);
        date_ngaysinh.setEnabled(true);
        txt_sdt.setEnabled(true);
        btnLuudg.setEnabled(true);
        btnResetdg.setEnabled(true);
        btnSuadg.setEnabled(false);
        btnXoadg.setEnabled(false);
        btnThemdg.setEnabled(false);
        btnHuydg.setEnabled(true);
    }
    else if(status.equals("Sua"))
    {
        txt_madg.setEnabled(false);
        txt_matk.setEnabled(false);
        txt_diachi.setEnabled(true);
        txt_ten.setEnabled(true);
        txt_mk.setEnabled(true);
        txt_tk.setEnabled(true);
        date_ngaysinh.setEnabled(true);
        txt_sdt.setEnabled(true);
        btnLuudg.setEnabled(true);
        btnResetdg.setEnabled(true);
        btnSuadg.setEnabled(false);
        btnXoadg.setEnabled(false);
        btnThemdg.setEnabled(false);
        btnHuydg.setEnabled(true);
    }
}
  private void showDuLieuDocGia(){
        try {
            tbDG.removeAll();
            
            String [] arr = {"Mã Độc Giả","Họ Tên","Giới Tính","Ngày Sinh","Địa Chỉ","Số Điện Thoại","Tài Khoản", "Mã Tài Khoản"};
            DefaultTableModel model;
            model = new DefaultTableModel(arr, 0);
            
            Connection connection = DBconnection.geConnection();
           
            String query = "select DG.madg, DG.hoten, DG.gioitinh, DG.ngaysinh ,DG.diachi,DG.sdt, TK.taikhoan, TK.matk from DocGia DG inner join TaiKhoan TK on DG.matk = TK.matk  ";
            Statement statement =  connection.createStatement();
	    ResultSet rs = statement.executeQuery(query);
            while(rs.next()) {
                Vector vct = new Vector();
		vct.add(rs.getString("madg"));
                vct.add(rs.getString("hoten"));
                vct.add(rs.getString("gioitinh"));
                vct.add(rs.getString("ngaysinh"));
                vct.add(rs.getString("diachi"));
                vct.add(rs.getString("sdt"));
                vct.add(rs.getString("taikhoan"));
               
                vct.add(rs.getString("matk"));
                model.addRow(vct);    
	    }  
            DBconnection.closeConnection(connection);
            tbDG.setModel(model);
           
            
        } catch (Exception e) {
            
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        trangchuthuvien ftv = new trangchuthuvien();
        ftv.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_mkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_mkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_mkActionPerformed

    private void tbDGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDGMouseClicked
        try {
            DefaultTableModel model = (DefaultTableModel)tbDG.getModel();

            int row = tbDG.getSelectedRow();
            String madg = tbDG.getValueAt(row, 0).toString();
            String ten = tbDG.getValueAt(row, 1).toString();
            String gioitinh = tbDG.getValueAt(row, 2).toString();
            Date ngaysinh = new SimpleDateFormat("yyyy-MM-dd").parse((String) model.getValueAt(row, 3).toString());
            String diachi = tbDG.getValueAt(row, 4).toString();
            String sdt = tbDG.getValueAt(row, 5).toString();
            String taikhoan = tbDG.getValueAt(row, 6).toString();
            
            String matk = tbDG.getValueAt(row, 7).toString();

            txt_madg.setText(madg);
            txt_ten.setText(ten);
            if(gioitinh.equalsIgnoreCase("Nam")){
                rdo_nam.setSelected(true);
                rdo_nu.setSelected(false);
            }else{
                rdo_nam.setSelected(false);
                rdo_nu.setSelected(true);
            }
            date_ngaysinh.setDate(ngaysinh);
            txt_diachi.setText(diachi);
            txt_sdt.setText(sdt);
            txt_tk.setText(taikhoan);
            
            txt_matk.setText(matk);
        } catch (ParseException ex) {
            Logger.getLogger(trangchuthuvien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbDGMouseClicked

    private void btnSuadgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuadgActionPerformed
        statusdg = "Sua";
        Dieukhien(statusdg);
    }//GEN-LAST:event_btnSuadgActionPerformed

    private void btnThemdgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemdgActionPerformed
        statusdg = "Them";
        Dieukhien(statusdg);

    }//GEN-LAST:event_btnThemdgActionPerformed

    private void btnXoadgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoadgActionPerformed

        int result = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc chẵn muốn xóa ?");
        if(result == 0){
            try {
                DefaultTableModel model = (DefaultTableModel)tbDG.getModel();

                int row = tbDG.getSelectedRow();
                String matk = tbDG.getValueAt(row, 7).toString();
                String madg = tbDG.getValueAt(row, 0).toString();

                Connection connection = DBconnection.geConnection();
                String query = "Delete from TaiKhoan Where matk = ? Delete from DocGia Where madg = ?";
                PreparedStatement ps = connection.prepareStatement(query);
                ps.setString(1, matk);
                ps.setString(2, madg);
                ps.executeUpdate();

                showDuLieuDocGia();
                DBconnection.closeConnection(connection);
                

                JOptionPane.showMessageDialog(rootPane, "Xóa Thành công");
            } catch (SQLException ex) {
                Logger.getLogger(trangchuthuvien.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnXoadgActionPerformed

    private void btnResetdgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetdgActionPerformed
       // txt_madg.setText("");
        txt_matk.setText("");
        txt_ten.setText("");
        txt_diachi.setText("");
        txt_sdt.setText("");
        txt_tk.setText("");
        txt_mk.setText("");
        //        statusdg = "Reset";
        //        Dieukhien(statusdg);
    }//GEN-LAST:event_btnResetdgActionPerformed

    public boolean checkPhone( boolean flag)  {
        // Bieu thuc chinh quy mo ta dinh dang so dien thoai
 
        do {
            String phonePattern = "\\d{10}";
            System.out.print("Input your phone(xxxxxxxxxx): ");
            
            flag = txt_sdt.getText().matches(phonePattern);
            if (!flag) { 
                System.out.println(!flag);
                System.out.println("Dữ liệu không hợp lệ!");  
                return true;
            }
        } while (!flag);
        System.out.println("Dữ liệu hợp lệ");
        return false;
    }
    
    private void btnLuudgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuudgActionPerformed
         
            // Thêm
            String pass = new String(txt_mk.getPassword());
            StringBuilder sb = new StringBuilder();
            
            
            if(txt_matk.getText().equals("")){
                sb.append("bạn chưa nhập mã tài khoản\n");
                txt_matk.requestFocus();
         
            }if(txt_tk.getText().equals("")){
                sb.append("Bạn chưa nhập tài khoản\n");
                txt_tk.requestFocus();
            }
            if(pass.equals("")){
                sb.append("bạn chưa nhập mật khẩu\n");
                txt_mk.requestFocus();
         
            }if(txt_diachi.getText().equals("")){
                sb.append("Bạn chưa nhập địa chỉ\n");
                txt_diachi.requestFocus();
            }
            if(txt_ten.getText().equals("")){
                sb.append("bạn chưa nhập tên\n");
                txt_ten.requestFocus();
         
            }if(txt_sdt.getText().equals("")){
                sb.append("Bạn chưa nhập số điện thoại\n");
                txt_sdt.requestFocus();
            }
            if(rdo_nam.isSelected()==false && rdo_nu.isSelected()== false){
                sb.append("Bạn chưa nhập giới tính\n");
         
            }if (sb.length()>0) {
                JOptionPane.showMessageDialog(this, sb.toString());
                return;
            }
            
            if(statusdg.equals("Them")){
                try {
                   
                    Connection conn = DBconnection.geConnection();
                    
                    String sqlmatk = "select * from TaiKhoan where matk='"+txt_matk.getText()+"'";
                   
                    PreparedStatement pstm = conn.prepareStatement(sqlmatk);
                    
                   
                    ResultSet rss = pstm.executeQuery();
                    if(checkPhone(true)){
                        JOptionPane.showMessageDialog(this, "Bạn chưa nhập đúng số điện thoại");;  
                    }
                    
                    else if(rss.next())
                    {
                        JOptionPane.showMessageDialog(this, "Mã tài khoản đã tồn tại !");
                    }else{
                        try {
                            Connection connection = DBconnection.geConnection();
                            String gioitinh = "";
                            
                            if(rdo_nam.isSelected()==true)
                            {
                                gioitinh = "Nam";
                            }else
                            {
                                gioitinh = "Nữ";
                            }
                            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                            String ngaysinhdg = sdf.format(date_ngaysinh.getDate());
                            String password = String.valueOf(txt_mk.getPassword());
                            String sql = "insert into TaiKhoan(matk,taikhoan,matkhau,quyen) values('"+txt_matk.getText()+"','"+txt_tk.getText()+"','"+password+"',N'Độc Giả') insert into DocGia(matk,hoten,gioitinh, ngaysinh, diachi, sdt) values('"+txt_matk.getText()+"',N'"+txt_ten.getText()+"',N'"+gioitinh+"','"+ngaysinhdg+"',N'"+txt_diachi.getText()+"','"+txt_sdt.getText()+"') ";
                            
                            Statement stm=  connection.createStatement();
                            int i = stm.executeUpdate(sql );
                            
                            if(i>0)
                            {
                                statusdg = "Reset";
                                Dieukhien(statusdg);
                                //    System.out.println("Them thanh cong");
                                
                            }
                            else
                            {
                                System.out.println("that bai");
                            }
                            showDuLieuDocGia();
                            DBconnection.closeConnection(connection);
                            
                        } catch (Exception e) {
                            
                        }
                    }   } catch (SQLException ex) {
                    Logger.getLogger(qlydocgia.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                try {
                    Connection connection = DBconnection.geConnection();
                    String gioitinh = "";
                    if(rdo_nam.isSelected()==true)
                    {
                        gioitinh = "Nam";
                    }else
                    {
                        gioitinh = "Nữ";
                    }
                    
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    String ngaysinhdg = sdf.format(date_ngaysinh.getDate());
                    String password = String.valueOf(txt_mk.getPassword());
                    String sql = "UPDATE TaiKhoan SET taikhoan='"+txt_tk.getText()+"',matkhau='"+password+"',quyen= N'Độc Giả' Where matk = '"+txt_matk.getText()+"'    UPDATE DocGia SET hoten = N'"+txt_ten.getText()+"', gioitinh = N'"+gioitinh+"', ngaysinh ='"+ngaysinhdg+"', diachi = N'"+txt_diachi.getText()+"', sdt = '"+txt_sdt.getText()+"' where  madg = '"+txt_madg.getText()+"'";
                    
                    Statement stm=  connection.createStatement();
                    int i = stm.executeUpdate(sql );
                    
                    if(i>0)
                    {
                        statusdg = "Reset";
                        Dieukhien(statusdg);
                        System.out.println("Sửa thanh cong");
                    }
                    else
                    {
                        System.out.println("that bai");
                    }
                    showDuLieuDocGia();
                    DBconnection.closeConnection(connection);
                    
                } catch (Exception e) {
                }
                
                
            }
       

    }//GEN-LAST:event_btnLuudgActionPerformed

    private void btnHuydgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuydgActionPerformed
        statusdg = "Reset";
        Dieukhien(statusdg);
    }//GEN-LAST:event_btnHuydgActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(qlydocgia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(qlydocgia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(qlydocgia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(qlydocgia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new qlydocgia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuydg;
    private javax.swing.JButton btnLuudg;
    private javax.swing.JButton btnResetdg;
    private javax.swing.JButton btnSuadg;
    private javax.swing.JButton btnThemdg;
    private javax.swing.JButton btnXoadg;
    private com.toedter.calendar.JDateChooser date_ngaysinh;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton rdo_nam;
    private javax.swing.JRadioButton rdo_nu;
    private javax.swing.JTable tbDG;
    private javax.swing.JTextArea txt_diachi;
    private javax.swing.JTextField txt_madg;
    private javax.swing.JTextField txt_matk;
    private javax.swing.JPasswordField txt_mk;
    private javax.swing.JTextField txt_sdt;
    private javax.swing.JTextField txt_ten;
    private javax.swing.JTextField txt_tk;
    // End of variables declaration//GEN-END:variables
}
