/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package giaodien;
import java.sql.*;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Date;
import java.lang.String;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import javax.swing.ButtonGroup;
import javax.swing.JFrame;

import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author qanh
 */
public class qlthuthu extends javax.swing.JFrame {

    /**
     * Creates new form qlthuthu
     */
    public qlthuthu() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        statustt = "Reset";
        Dieukhien(statustt);
        showDuLieuTT();
        ButtonGroup bg = new ButtonGroup();
        bg.add(rdo_nam);
        bg.add(rdo_nu);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel15 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel16 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        txt_timkiem = new javax.swing.JTextField();
        jScrollPane = new javax.swing.JScrollPane();
        tbTKTT = new javax.swing.JTable();
        jPanel17 = new javax.swing.JPanel();
        txt_ten = new javax.swing.JTextField();
        txt_matk = new javax.swing.JTextField();
        txt_tk = new javax.swing.JTextField();
        txt_mk = new javax.swing.JPasswordField();
        txt_sdt = new javax.swing.JTextField();
        rdo_nam = new javax.swing.JRadioButton();
        rdo_nu = new javax.swing.JRadioButton();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane13 = new javax.swing.JScrollPane();
        tbTT = new javax.swing.JTable();
        btnSuadg = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        btnThemdg = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        btnXoadg = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        btnResetdg = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        txt_diachi = new javax.swing.JTextArea();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        txt_matt = new javax.swing.JTextField();
        btnHuydg = new javax.swing.JButton();
        btnLuudg = new javax.swing.JButton();
        date_ngaysinh = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1307, 756));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/icon_previous.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 112));
        jLabel1.setText("QUẢN LÝ THỦ THƯ");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(411, 411, 411)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jTabbedPane5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        jLabel46.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel46.setText("Nhập thông tin thủ thư:");

        txt_timkiem.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_timkiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_timkiemKeyReleased(evt);
            }
        });

        tbTKTT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã độc giả", "Tên độc giả", "Ngày sinh", "Giới tính", "Số điện thoại", "Tài khoản ", "Mật khẩu"
            }
        ));
        jScrollPane.setViewportView(tbTKTT);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel46)
                .addGap(47, 47, 47)
                .addComponent(txt_timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(379, 379, 379))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap(152, Short.MAX_VALUE)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1007, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1335, Short.MAX_VALUE)
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel16Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 585, Short.MAX_VALUE)
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane5.addTab("Tìm Kiếm Thủ Thư", jPanel16);

        jPanel17.setBackground(new java.awt.Color(153, 204, 255));

        txt_ten.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        txt_matk.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        txt_tk.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        txt_mk.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_mk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_mkActionPerformed(evt);
            }
        });

        txt_sdt.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        rdo_nam.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        rdo_nam.setText("Nam");

        rdo_nu.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        rdo_nu.setText("Nữ");

        tbTT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã thủ thư", "Tên thủ thư", "Tài khoản", "Mật khẩu", "Giới tính", "Ngày sinh", "Số điện thoại", "Địa chỉ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbTT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTTMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(tbTT);

        btnSuadg.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnSuadg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/exchange1.png"))); // NOI18N
        btnSuadg.setText(" Sửa");
        btnSuadg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuadgActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel27.setText("Mã thủ thư:");

        btnThemdg.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnThemdg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/plus.png"))); // NOI18N
        btnThemdg.setText(" Thêm");
        btnThemdg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemdgActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel29.setText("Tên thủ thư:");

        btnXoadg.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnXoadg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/delete.png"))); // NOI18N
        btnXoadg.setText(" Xóa");
        btnXoadg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoadgActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel30.setText("Mã tài khoản:");

        btnResetdg.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnResetdg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/lammoi.png"))); // NOI18N
        btnResetdg.setText("Làm mới");
        btnResetdg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetdgActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel31.setText("Mật khẩu:");

        txt_diachi.setColumns(20);
        txt_diachi.setRows(5);
        jScrollPane14.setViewportView(txt_diachi);

        jLabel41.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel41.setText("Số điện thoại:");

        jLabel42.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel42.setText("Địa chỉ:");

        jLabel43.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel43.setText("Giới tính:");

        jLabel44.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel44.setText("Ngày sinh:");

        jLabel45.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel45.setText("Tài khoản:");

        txt_matt.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        btnHuydg.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnHuydg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/remove (1).png"))); // NOI18N
        btnHuydg.setText("Hủy");
        btnHuydg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuydgActionPerformed(evt);
            }
        });

        btnLuudg.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnLuudg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgicon/luu.png"))); // NOI18N
        btnLuudg.setText("Lưu");
        btnLuudg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuudgActionPerformed(evt);
            }
        });

        date_ngaysinh.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_ten, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addGap(45, 45, 45)
                                .addComponent(txt_matt, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_matk, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel45)
                                    .addComponent(jLabel31))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_tk, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_mk, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(140, 140, 140)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel41)
                                    .addComponent(jLabel42))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_sdt)
                                    .addComponent(jScrollPane14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel44)
                                    .addComponent(jLabel43))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel17Layout.createSequentialGroup()
                                        .addComponent(rdo_nam)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(rdo_nu))
                                    .addComponent(date_ngaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(btnThemdg)
                                .addGap(44, 44, 44)
                                .addComponent(btnSuadg)
                                .addGap(47, 47, 47)
                                .addComponent(btnXoadg)
                                .addGap(37, 37, 37)
                                .addComponent(btnHuydg)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnLuudg)
                                .addGap(63, 63, 63)
                                .addComponent(btnResetdg))
                            .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 1220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel43)
                            .addComponent(rdo_nam)
                            .addComponent(rdo_nu))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel44)
                            .addComponent(date_ngaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(txt_matt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(txt_ten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_matk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30)
                            .addComponent(jLabel41)
                            .addComponent(txt_sdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel42)
                            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel17Layout.createSequentialGroup()
                                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_tk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel45))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel31)
                                        .addComponent(txt_mk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(24, 24, 24)))
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLuudg)
                    .addComponent(btnResetdg)
                    .addComponent(btnThemdg)
                    .addComponent(btnSuadg)
                    .addComponent(btnXoadg)
                    .addComponent(btnHuydg))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );

        jTabbedPane5.addTab("Xem Thông Tin Thủ Thư", jPanel17);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane5, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 620, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private static String statustt ="";
    private void Dieukhien(String status){
    if(status.equals("Reset"))
    {
        txt_matt.setEnabled(false);
        txt_matk.setEnabled(false);
        txt_diachi.setEnabled(false);
        txt_ten.setEnabled(false);
        txt_mk.setEnabled(false);
        txt_tk.setEnabled(false);
        date_ngaysinh.setEnabled(false);
        txt_sdt.setEnabled(false);
       
        btnHuydg.setEnabled(false);
        btnLuudg.setEnabled(false);
        btnResetdg.setEnabled(false);
        btnSuadg.setEnabled(true);
        btnXoadg.setEnabled(true);
        btnThemdg.setEnabled(true);
    }
    else if(status.equals("Them")){
        txt_matt.setEnabled(false);
        txt_matk.setEnabled(true);
        txt_diachi.setEnabled(true);
        txt_ten.setEnabled(true);
        txt_mk.setEnabled(true);
        txt_tk.setEnabled(true);
        date_ngaysinh.setEnabled(true);
        txt_sdt.setEnabled(true);
        btnLuudg.setEnabled(true);
        btnResetdg.setEnabled(true);
        btnSuadg.setEnabled(false);
        btnXoadg.setEnabled(false);
        btnThemdg.setEnabled(false);
        btnHuydg.setEnabled(true);
    }
    else if(status.equals("Sua"))
    {
        txt_matt.setEnabled(false);
        txt_matk.setEnabled(false);
        txt_diachi.setEnabled(true);
        txt_ten.setEnabled(true);
        txt_mk.setEnabled(true);
        txt_tk.setEnabled(true);
        date_ngaysinh.setEnabled(true);
        txt_sdt.setEnabled(true);
        btnLuudg.setEnabled(true);
        btnResetdg.setEnabled(true);
        btnSuadg.setEnabled(false);
        btnXoadg.setEnabled(false);
        btnThemdg.setEnabled(false);
        btnHuydg.setEnabled(true);
    }
}
  private void showDuLieuTT(){
        try {
            tbTT.removeAll();
            tbTKTT.removeAll();
            
            String [] arr = {"Mã Thủ Thư","Họ Tên","Giới Tính","Ngày Sinh","Địa Chỉ","Số Điện Thoại","Tài Khoản", "Mã Tài Khoản"};
            DefaultTableModel model;
            model = new DefaultTableModel(arr, 0);
            
            Connection connection = DBconnection.geConnection();
           
            String query = "select TT.matt, TT.hoten, TT.gioitinh, TT.ngaysinh , TT.diachi, TT.sdt, TK.taikhoan, TK.matk from ThuThu TT inner join TaiKhoan TK on TT.matk = TK.matk  ";
            Statement statement =  connection.createStatement();
	    ResultSet rs = statement.executeQuery(query);
            while(rs.next()) {
                Vector vct = new Vector();
		vct.add(rs.getString("matt"));
                vct.add(rs.getString("hoten"));
                vct.add(rs.getString("gioitinh"));
                vct.add(rs.getString("ngaysinh"));
                vct.add(rs.getString("diachi"));
                vct.add(rs.getString("sdt"));
                vct.add(rs.getString("taikhoan"));
//                vct.add(rs.getString("matkhau"));
                vct.add(rs.getString("matk"));
                model.addRow(vct);    
	    }  
            DBconnection.closeConnection(connection);
            
            tbTT.setModel(model);
            tbTKTT.setModel(model);
           
            
        } catch (Exception e) {
            
        }
    }
    private void txt_mkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_mkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_mkActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        trangchuthuvien ftv = new trangchuthuvien();
        ftv.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnHuydgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuydgActionPerformed
        statustt = "Reset";
        Dieukhien(statustt);
    }//GEN-LAST:event_btnHuydgActionPerformed

    private void btnLuudgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuudgActionPerformed
        // Thêm
                 
            // Thêm
            String pass = new String(txt_mk.getPassword());
            StringBuilder sb = new StringBuilder();
            
            
            if(txt_matk.getText().equals("")){
                sb.append("bạn chưa nhập mã tài khoản\n");
                txt_matk.requestFocus();
         
            }if(txt_tk.getText().equals("")){
                sb.append("Bạn chưa nhập tài khoản\n");
                txt_tk.requestFocus();
            }
            if(pass.equals("")){
                sb.append("bạn chưa nhập mật khẩu\n");
                txt_mk.requestFocus();
         
            }if(txt_diachi.getText().equals("")){
                sb.append("Bạn chưa nhập địa chỉ\n");
                txt_diachi.requestFocus();
            }
            if(txt_ten.getText().equals("")){
                sb.append("bạn chưa nhập tên\n");
                txt_ten.requestFocus();
         
            }if(txt_sdt.getText().equals("")){
                sb.append("Bạn chưa nhập số điện thoại\n");
                txt_sdt.requestFocus();
            }
            if(rdo_nam.isSelected()==false && rdo_nu.isSelected()== false){
                sb.append("Bạn chưa nhập giới tính\n");
         
            }if (sb.length()>0) {
                JOptionPane.showMessageDialog(this, sb.toString());
                return;
            }
            
            if(statustt.equals("Them")){
                try {
                    Connection conn = DBconnection.geConnection();
                   
                    String sqlmatk = "select * from TaiKhoan where matk='"+txt_matk.getText()+"'";
             
                    PreparedStatement pstm = conn.prepareStatement(sqlmatk);
                    
                
                    ResultSet rss = pstm.executeQuery();
                    if(rss.next())
                    {
                        JOptionPane.showMessageDialog(this, "Mã tài khoản đã tồn tại !");
                    }else{
                        try {
                            Connection connection = DBconnection.geConnection();
                            String gioitinh = "";
                            
                            if(rdo_nam.isSelected()==true)
                            {
                                gioitinh = "Nam";
                            }else
                            {
                                gioitinh = "Nữ";
                            }
                            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                            String ngaysinhdg = sdf.format(date_ngaysinh.getDate());
                            String password = String.valueOf(txt_mk.getPassword());
                            String sql = "insert into TaiKhoan(matk,taikhoan,matkhau,quyen) values('"+txt_matk.getText()+"','"+txt_tk.getText()+"','"+password+"',N'Thủ Thư') insert into ThuThu(matk,hoten,gioitinh, ngaysinh, diachi, sdt) values('"+txt_matk.getText()+"',N'"+txt_ten.getText()+"',N'"+gioitinh+"','"+ngaysinhdg+"',N'"+txt_diachi.getText()+"','"+txt_sdt.getText()+"') ";
                            
                            Statement stm=  connection.createStatement();
                            int i = stm.executeUpdate(sql );
                            
                            if(i>0)
                            {
                                statustt = "Reset";
                                Dieukhien(statustt);
                                //    System.out.println("Them thanh cong");
                                
                            }
                            else
                            {
                                System.out.println("that bai");
                            }
                            showDuLieuTT();
                            DBconnection.closeConnection(connection);
                            
                        } catch (Exception e) {
                            
                        }
                    }   } catch (SQLException ex) {
                    Logger.getLogger(qlthuthu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else if(statustt.equals("Sua")){
                try {
                    Connection connection = DBconnection.geConnection();
                    String gioitinh = "";
                    if(rdo_nam.isSelected()==true)
                    {
                        gioitinh = "Nam";
                    }else
                    {
                        gioitinh = "Nữ";
                    }
                    
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    String ngaysinhdg = sdf.format(date_ngaysinh.getDate());
                    String password = String.valueOf(txt_mk.getPassword());
                    String sql = "UPDATE TaiKhoan SET taikhoan='"+txt_tk.getText()+"',matkhau='"+password+"',quyen= N'Thủ Thư' Where matk = '"+txt_matk.getText()+"'    UPDATE ThuThu SET hoten = N'"+txt_ten.getText()+"', gioitinh = N'"+gioitinh+"', ngaysinh ='"+ngaysinhdg+"', diachi = N'"+txt_diachi.getText()+"', sdt = '"+txt_sdt.getText()+"' where  matt = '"+txt_matt.getText()+"'";
                    
                    Statement stm=  connection.createStatement();
                    int i = stm.executeUpdate(sql );
                    
                    if(i>0)
                    {
                        statustt = "Reset";
                        Dieukhien(statustt);
                        System.out.println("Sửa thanh cong");
                    }
                    else
                    {
                        System.out.println("that bai");
                    }
                    showDuLieuTT();
                    DBconnection.closeConnection(connection);
                    
                } catch (Exception e) {
                }
        
            }
    }//GEN-LAST:event_btnLuudgActionPerformed

    private void btnThemdgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemdgActionPerformed
        statustt = "Them";
        Dieukhien(statustt);
    }//GEN-LAST:event_btnThemdgActionPerformed

    private void btnSuadgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuadgActionPerformed
        statustt = "Sua";
        Dieukhien(statustt);
    }//GEN-LAST:event_btnSuadgActionPerformed

    private void btnXoadgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoadgActionPerformed
        int result = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc chẵn muốn xóa ?");
        if(result == 0){
            try {
                int row = tbTT.getSelectedRow();
                String matk = tbTT.getValueAt(row, 7).toString();
                String matt = tbTT.getValueAt(row, 0).toString();

                Connection connection = DBconnection.geConnection();
                String query = "Delete from TaiKhoan Where matk = ? Delete from ThuThu Where matt = ?";
                PreparedStatement ps = connection.prepareStatement(query);
                ps.setString(1, matk);
                ps.setString(2, matt);
                ps.executeUpdate();

                showDuLieuTT();
                DBconnection.closeConnection(connection);

                JOptionPane.showMessageDialog(rootPane, "Xóa Thành công");
            } catch (SQLException ex) {
                Logger.getLogger(trangchuthuvien.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnXoadgActionPerformed

    private void btnResetdgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetdgActionPerformed
//        txt_matt.setText("");
        txt_matk.setText("");
        txt_ten.setText("");
        txt_diachi.setText("");
        txt_sdt.setText("");
        txt_tk.setText("");
        txt_mk.setText("");
    }//GEN-LAST:event_btnResetdgActionPerformed

    private void tbTTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTTMouseClicked

        
        try {
            DefaultTableModel model = (DefaultTableModel)tbTT.getModel();

            int row = tbTT.getSelectedRow();
            String matt = tbTT.getValueAt(row, 0).toString();
            String ten = tbTT.getValueAt(row, 1).toString();
            String gioitinh = tbTT.getValueAt(row, 2).toString();
            Date ngaysinh = new SimpleDateFormat("yyyy-MM-dd").parse((String) model.getValueAt(row, 3).toString());
            String diachi = tbTT.getValueAt(row, 4).toString();
            String sdt = tbTT.getValueAt(row, 5).toString();
            String taikhoan = tbTT.getValueAt(row, 6).toString();
           
            String matk = tbTT.getValueAt(row, 7).toString();

            txt_matt.setText(matt);
            txt_ten.setText(ten);
            if(gioitinh.equalsIgnoreCase("Nam")){
                rdo_nam.setSelected(true);
                rdo_nu.setSelected(false);
            }else{
                rdo_nam.setSelected(false);
                rdo_nu.setSelected(true);
            }
            date_ngaysinh.setDate(ngaysinh);
            txt_diachi.setText(diachi);
            txt_sdt.setText(sdt);
            txt_tk.setText(taikhoan);
          
            txt_matk.setText(matk);
        } catch (ParseException ex) {
            Logger.getLogger(trangchuthuvien.class.getName()).log(Level.SEVERE, null, ex);
        }       
    }//GEN-LAST:event_tbTTMouseClicked

    private void txt_timkiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_timkiemKeyReleased
        DefaultTableModel model = (DefaultTableModel)tbTKTT.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tbTKTT.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(txt_timkiem.getText().trim()));
    }//GEN-LAST:event_txt_timkiemKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(qlthuthu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(qlthuthu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(qlthuthu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(qlthuthu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new qlthuthu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuydg;
    private javax.swing.JButton btnLuudg;
    private javax.swing.JButton btnResetdg;
    private javax.swing.JButton btnSuadg;
    private javax.swing.JButton btnThemdg;
    private javax.swing.JButton btnXoadg;
    private com.toedter.calendar.JDateChooser date_ngaysinh;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JRadioButton rdo_nam;
    private javax.swing.JRadioButton rdo_nu;
    private javax.swing.JTable tbTKTT;
    private javax.swing.JTable tbTT;
    private javax.swing.JTextArea txt_diachi;
    private javax.swing.JTextField txt_matk;
    private javax.swing.JTextField txt_matt;
    private javax.swing.JPasswordField txt_mk;
    private javax.swing.JTextField txt_sdt;
    private javax.swing.JTextField txt_ten;
    private javax.swing.JTextField txt_timkiem;
    private javax.swing.JTextField txt_tk;
    // End of variables declaration//GEN-END:variables
}
